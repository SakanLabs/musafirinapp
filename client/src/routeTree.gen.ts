/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestUserDashboardNoAuthRouteImport } from './routes/test-user-dashboard-no-auth'
import { Route as TestUserDashboardRouteImport } from './routes/test-user-dashboard'
import { Route as TestSimpleRedirectRouteImport } from './routes/test-simple-redirect'
import { Route as TestRedirectRouteImport } from './routes/test-redirect'
import { Route as TestLogsRouteImport } from './routes/test-logs'
import { Route as TestAuthRouteImport } from './routes/test-auth'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as DebugRouteImport } from './routes/debug'
import { Route as DashboardTestRouteImport } from './routes/dashboard-test'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardUserRouteImport } from './routes/dashboard/user'
import { Route as DashboardAdminRouteImport } from './routes/dashboard/admin'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'

const TestUserDashboardNoAuthRoute = TestUserDashboardNoAuthRouteImport.update({
  id: '/test-user-dashboard-no-auth',
  path: '/test-user-dashboard-no-auth',
  getParentRoute: () => rootRouteImport,
} as any)
const TestUserDashboardRoute = TestUserDashboardRouteImport.update({
  id: '/test-user-dashboard',
  path: '/test-user-dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const TestSimpleRedirectRoute = TestSimpleRedirectRouteImport.update({
  id: '/test-simple-redirect',
  path: '/test-simple-redirect',
  getParentRoute: () => rootRouteImport,
} as any)
const TestRedirectRoute = TestRedirectRouteImport.update({
  id: '/test-redirect',
  path: '/test-redirect',
  getParentRoute: () => rootRouteImport,
} as any)
const TestLogsRoute = TestLogsRouteImport.update({
  id: '/test-logs',
  path: '/test-logs',
  getParentRoute: () => rootRouteImport,
} as any)
const TestAuthRoute = TestAuthRouteImport.update({
  id: '/test-auth',
  path: '/test-auth',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugRoute = DebugRouteImport.update({
  id: '/debug',
  path: '/debug',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardTestRoute = DashboardTestRouteImport.update({
  id: '/dashboard-test',
  path: '/dashboard-test',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardUserRoute = DashboardUserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminRoute = DashboardAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard-test': typeof DashboardTestRoute
  '/debug': typeof DebugRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test-auth': typeof TestAuthRoute
  '/test-logs': typeof TestLogsRoute
  '/test-redirect': typeof TestRedirectRoute
  '/test-simple-redirect': typeof TestSimpleRedirectRoute
  '/test-user-dashboard': typeof TestUserDashboardRoute
  '/test-user-dashboard-no-auth': typeof TestUserDashboardNoAuthRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/dashboard/admin': typeof DashboardAdminRoute
  '/dashboard/user': typeof DashboardUserRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard-test': typeof DashboardTestRoute
  '/debug': typeof DebugRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test-auth': typeof TestAuthRoute
  '/test-logs': typeof TestLogsRoute
  '/test-redirect': typeof TestRedirectRoute
  '/test-simple-redirect': typeof TestSimpleRedirectRoute
  '/test-user-dashboard': typeof TestUserDashboardRoute
  '/test-user-dashboard-no-auth': typeof TestUserDashboardNoAuthRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/dashboard/admin': typeof DashboardAdminRoute
  '/dashboard/user': typeof DashboardUserRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard-test': typeof DashboardTestRoute
  '/debug': typeof DebugRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test-auth': typeof TestAuthRoute
  '/test-logs': typeof TestLogsRoute
  '/test-redirect': typeof TestRedirectRoute
  '/test-simple-redirect': typeof TestSimpleRedirectRoute
  '/test-user-dashboard': typeof TestUserDashboardRoute
  '/test-user-dashboard-no-auth': typeof TestUserDashboardNoAuthRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/dashboard/admin': typeof DashboardAdminRoute
  '/dashboard/user': typeof DashboardUserRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard-test'
    | '/debug'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/test-auth'
    | '/test-logs'
    | '/test-redirect'
    | '/test-simple-redirect'
    | '/test-user-dashboard'
    | '/test-user-dashboard-no-auth'
    | '/auth/callback'
    | '/dashboard/admin'
    | '/dashboard/user'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/dashboard-test'
    | '/debug'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/test-auth'
    | '/test-logs'
    | '/test-redirect'
    | '/test-simple-redirect'
    | '/test-user-dashboard'
    | '/test-user-dashboard-no-auth'
    | '/auth/callback'
    | '/dashboard/admin'
    | '/dashboard/user'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard-test'
    | '/debug'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/test-auth'
    | '/test-logs'
    | '/test-redirect'
    | '/test-simple-redirect'
    | '/test-user-dashboard'
    | '/test-user-dashboard-no-auth'
    | '/auth/callback'
    | '/dashboard/admin'
    | '/dashboard/user'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  DashboardTestRoute: typeof DashboardTestRoute
  DebugRoute: typeof DebugRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  TestAuthRoute: typeof TestAuthRoute
  TestLogsRoute: typeof TestLogsRoute
  TestRedirectRoute: typeof TestRedirectRoute
  TestSimpleRedirectRoute: typeof TestSimpleRedirectRoute
  TestUserDashboardRoute: typeof TestUserDashboardRoute
  TestUserDashboardNoAuthRoute: typeof TestUserDashboardNoAuthRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test-user-dashboard-no-auth': {
      id: '/test-user-dashboard-no-auth'
      path: '/test-user-dashboard-no-auth'
      fullPath: '/test-user-dashboard-no-auth'
      preLoaderRoute: typeof TestUserDashboardNoAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test-user-dashboard': {
      id: '/test-user-dashboard'
      path: '/test-user-dashboard'
      fullPath: '/test-user-dashboard'
      preLoaderRoute: typeof TestUserDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test-simple-redirect': {
      id: '/test-simple-redirect'
      path: '/test-simple-redirect'
      fullPath: '/test-simple-redirect'
      preLoaderRoute: typeof TestSimpleRedirectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test-redirect': {
      id: '/test-redirect'
      path: '/test-redirect'
      fullPath: '/test-redirect'
      preLoaderRoute: typeof TestRedirectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test-logs': {
      id: '/test-logs'
      path: '/test-logs'
      fullPath: '/test-logs'
      preLoaderRoute: typeof TestLogsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test-auth': {
      id: '/test-auth'
      path: '/test-auth'
      fullPath: '/test-auth'
      preLoaderRoute: typeof TestAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug': {
      id: '/debug'
      path: '/debug'
      fullPath: '/debug'
      preLoaderRoute: typeof DebugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard-test': {
      id: '/dashboard-test'
      path: '/dashboard-test'
      fullPath: '/dashboard-test'
      preLoaderRoute: typeof DashboardTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/user': {
      id: '/dashboard/user'
      path: '/user'
      fullPath: '/dashboard/user'
      preLoaderRoute: typeof DashboardUserRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/admin': {
      id: '/dashboard/admin'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface DashboardRouteChildren {
  DashboardAdminRoute: typeof DashboardAdminRoute
  DashboardUserRoute: typeof DashboardUserRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAdminRoute: DashboardAdminRoute,
  DashboardUserRoute: DashboardUserRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  DashboardTestRoute: DashboardTestRoute,
  DebugRoute: DebugRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  TestAuthRoute: TestAuthRoute,
  TestLogsRoute: TestLogsRoute,
  TestRedirectRoute: TestRedirectRoute,
  TestSimpleRedirectRoute: TestSimpleRedirectRoute,
  TestUserDashboardRoute: TestUserDashboardRoute,
  TestUserDashboardNoAuthRoute: TestUserDashboardNoAuthRoute,
  AuthCallbackRoute: AuthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
